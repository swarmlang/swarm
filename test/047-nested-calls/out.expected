[35m   debug [39mParsing argument: /home/garrettmills/Projects/swarm/test/047-nested-calls/test.svi
[35m   debug [39mGot input file: /home/garrettmills/Projects/swarm/test/047-nested-calls/test.svi
[35m   debug [39mVM: Skipping uncalled function body: BEGINFN<Location<f:INNER2>, TypeReference<Primitive<NUMBER>>>, pc: 4
[35m   debug [39mVM: Skipping uncalled function body: BEGINFN<Location<f:INNER1>, TypeReference<Primitive<NUMBER>>>, pc: 8
[35m   debug [39mVM: Skipping uncalled function body: BEGINFN<Location<f:INNER0>, TypeReference<Primitive<NUMBER>>>, pc: 12
[35m   debug [39mVM: assigneval Location<l:two> CALL1<Location<f:INNER0>, NumberReference<1.000000>>
[35m   debug [39mVM: assignEval: got call0 or call1
[35m   debug [39mVM: assignEval: jumping to call
[35m   debug [39mVM: call1 Location<f:INNER0> NumberReference<1.000000>
[35m   debug [39mVM: ensureType: TypeReference<Primitive<NUMBER>>
[35m   debug [39mVM: ensureType: TypeReference<Primitive<NUMBER>>
[35m   debug [39mVM: load inline function: INNER0 (#params: 1) (returns: TypeReference<Primitive<NUMBER>>)
[35m   debug [39mVM: ensureFunction: FunctionReference<InlineFunction<f:INNER0, rt: Primitive<NUMBER>>>
[35m   debug [39mVM: inline call: InlineFunctionCall<f:INNER0> (pc: 8)
[35m   debug [39mVM: next instruction for inline call: FNPARAM<TypeReference<Primitive<NUMBER>>, Location<l:lhs>>
[35m   debug [39mVM: fnparam TypeReference<Primitive<NUMBER>> Location<l:lhs>
[35m   debug [39mVM: fnparam: Location<l:lhs> <- NumberReference<1.000000>
[35m   debug [39mVM: assigneval Location<l:lhs> CALL1<Location<f:INNER1>, Location<l:lhs>>
[35m   debug [39mVM: assignEval: got call0 or call1
[35m   debug [39mVM: assignEval: jumping to call
[35m   debug [39mVM: call1 Location<f:INNER1> Location<l:lhs>
[35m   debug [39mVM: ensureType: TypeReference<Primitive<NUMBER>>
[35m   debug [39mVM: ensureType: TypeReference<Primitive<NUMBER>>
[35m   debug [39mVM: load inline function: INNER1 (#params: 1) (returns: TypeReference<Primitive<NUMBER>>)
[35m   debug [39mVM: ensureFunction: FunctionReference<InlineFunction<f:INNER1, rt: Primitive<NUMBER>>>
[35m   debug [39mVM: inline call: InlineFunctionCall<f:INNER1> (pc: 4)
[35m   debug [39mVM: next instruction for inline call: FNPARAM<TypeReference<Primitive<NUMBER>>, Location<l:lhs>>
[35m   debug [39mVM: fnparam TypeReference<Primitive<NUMBER>> Location<l:lhs>
[35m   debug [39mVM: fnparam: Location<l:lhs> <- NumberReference<1.000000>
[35m   debug [39mVM: assigneval Location<l:lhs> CALL1<Location<f:INNER2>, Location<l:lhs>>
[35m   debug [39mVM: assignEval: got call0 or call1
[35m   debug [39mVM: assignEval: jumping to call
[35m   debug [39mVM: call1 Location<f:INNER2> Location<l:lhs>
[35m   debug [39mVM: ensureType: TypeReference<Primitive<NUMBER>>
[35m   debug [39mVM: ensureType: TypeReference<Primitive<NUMBER>>
[35m   debug [39mVM: load inline function: INNER2 (#params: 1) (returns: TypeReference<Primitive<NUMBER>>)
[35m   debug [39mVM: ensureFunction: FunctionReference<InlineFunction<f:INNER2, rt: Primitive<NUMBER>>>
[35m   debug [39mVM: inline call: InlineFunctionCall<f:INNER2> (pc: 0)
[35m   debug [39mVM: next instruction for inline call: FNPARAM<TypeReference<Primitive<NUMBER>>, Location<l:lhs>>
[35m   debug [39mVM: fnparam TypeReference<Primitive<NUMBER>> Location<l:lhs>
[35m   debug [39mVM: fnparam: Location<l:lhs> <- NumberReference<1.000000>
[35m   debug [39mVM: assigneval Location<l:lhs> PLUS<Location<l:lhs>, NumberReference<1.000000>>
[35m   debug [39mVM: plus Location<l:lhs> NumberReference<1.000000>
[35m   debug [39mVM: ensureNumber: NumberReference<1.000000>
[35m   debug [39mVM: ensureNumber: NumberReference<1.000000>
[35m   debug [39mVM: Location<l:lhs> <- NumberReference<2.000000>
[35m   debug [39mVM: return1 Location<l:lhs>
[35m   debug [39mVM: assigneval Location<l:lhs> CALL1<Location<f:INNER2>, Location<l:lhs>>
[35m   debug [39mVM: assignEval: got call0 or call1
[35m   debug [39mVM: assignEval: jumped from return
[35m   debug [39mVM: Location<l:lhs> <- NumberReference<2.000000>
[35m   debug [39mVM: return1 Location<l:lhs>
[35m   debug [39mVM: assigneval Location<l:lhs> CALL1<Location<f:INNER1>, Location<l:lhs>>
[35m   debug [39mVM: assignEval: got call0 or call1
[35m   debug [39mVM: assignEval: jumped from return
[35m   debug [39mVM: Location<l:lhs> <- NumberReference<2.000000>
[35m   debug [39mVM: return1 Location<l:lhs>
[35m   debug [39mVM: assigneval Location<l:two> CALL1<Location<f:INNER0>, NumberReference<1.000000>>
[35m   debug [39mVM: assignEval: got call0 or call1
[35m   debug [39mVM: assignEval: jumped from return
[35m   debug [39mVM: Location<l:two> <- NumberReference<2.000000>

[35m   debug [39mParsing argument: /home/garrettmills/Projects/swarm/test/040-return_capture/test.svi
[35m   debug [39mGot input file: /home/garrettmills/Projects/swarm/test/040-return_capture/test.svi
[35m   debug [39mVM: assignvalue Location<s:i> NumberReference<1.000000>
[35m   debug [39mVM: Location<s:i> <- NumberReference<1.000000>
[35m   debug [39mVM: Skipping uncalled function body: BEGINFN<Location<f:NEXT_ID>, TypeReference<Primitive<NUMBER>>>, pc: 6
[35m   debug [39mVM: call0 Location<f:NEXT_ID>
[35m   debug [39mVM: ensureType: TypeReference<Primitive<NUMBER>>
[35m   debug [39mVM: load inline function: NEXT_ID (#params: 0) (returns: TypeReference<Primitive<NUMBER>>)
[35m   debug [39mVM: ensureFunction: FunctionReference<InlineFunction<f:NEXT_ID, rt: Primitive<NUMBER>>>
[35m   debug [39mVM: inline call: InlineFunctionCall<f:NEXT_ID> (pc: 1)
[35m   debug [39mVM: next instruction for inline call: SCOPEOF<Location<l:i>>
[35m   debug [39mVM: scopeof Location<l:i>
[35m   debug [39mVM: assignvalue Location<l:i> Location<s:i>
[35m   debug [39mVM: Location<l:i> <- NumberReference<1.000000>
[35m   debug [39mVM: assigneval Location<s:i> PLUS<Location<s:i>, NumberReference<1.000000>>
[35m   debug [39mVM: plus Location<s:i> NumberReference<1.000000>
[35m   debug [39mVM: ensureNumber: NumberReference<1.000000>
[35m   debug [39mVM: ensureNumber: NumberReference<1.000000>
[35m   debug [39mVM: Location<s:i> <- NumberReference<2.000000>
[35m   debug [39mVM: return1 Location<l:i>
[35m   debug [39mVM: assigneval Location<l:test> CALL0<Location<f:NEXT_ID>>
[35m   debug [39mVM: assignEval: got call0 or call1
[35m   debug [39mVM: assignEval: jumping to call
[35m   debug [39mVM: call0 Location<f:NEXT_ID>
[35m   debug [39mVM: ensureType: TypeReference<Primitive<NUMBER>>
[35m   debug [39mVM: load inline function: NEXT_ID (#params: 0) (returns: TypeReference<Primitive<NUMBER>>)
[35m   debug [39mVM: ensureFunction: FunctionReference<InlineFunction<f:NEXT_ID, rt: Primitive<NUMBER>>>
[35m   debug [39mVM: inline call: InlineFunctionCall<f:NEXT_ID> (pc: 1)
[35m   debug [39mVM: next instruction for inline call: SCOPEOF<Location<l:i>>
[35m   debug [39mVM: scopeof Location<l:i>
[35m   debug [39mVM: assignvalue Location<l:i> Location<s:i>
[35m   debug [39mVM: Location<l:i> <- NumberReference<2.000000>
[35m   debug [39mVM: assigneval Location<s:i> PLUS<Location<s:i>, NumberReference<1.000000>>
[35m   debug [39mVM: plus Location<s:i> NumberReference<1.000000>
[35m   debug [39mVM: ensureNumber: NumberReference<2.000000>
[35m   debug [39mVM: ensureNumber: NumberReference<1.000000>
[35m   debug [39mVM: Location<s:i> <- NumberReference<3.000000>
[35m   debug [39mVM: return1 Location<l:i>
[35m   debug [39mVM: assigneval Location<l:test> CALL0<Location<f:NEXT_ID>>
[35m   debug [39mVM: assignEval: got call0 or call1
[35m   debug [39mVM: assignEval: jumped from return
[35m   debug [39mVM: Location<l:test> <- NumberReference<2.000000>
